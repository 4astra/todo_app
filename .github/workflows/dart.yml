on: push
name: Test, Build and Release apk
jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable'
    # - run: flutter pub get
    # - run: flutter test
    # steps:
    # - uses: actions/checkout@v1
    # - uses: actions/setup-java@v1
    #   with:
    #     java-version: '12.x'
    # - uses: subosito/flutter-action@v1
    #   with:
    #     flutter-version: '1.7.8+hotfix.4'
    - run: flutter pub get
    - run: flutter test
    - run: flutter build apk --debug --split-per-abi
    - name: Create a Release APK
      uses: ncipollo/release-action@v1
      with:
        artifacts: "build/app/outputs/apk/debug/*.apk"
        token: ${{ secrets.TOKEN }}

# #give the pipeline a name
# name: Dart CI

# #set conditions to trigger on
# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]

# # define what happens when conditions are met
# jobs:
#   build:
#     # use ubuntu's latest OS
#     runs-on: ubuntu-latest
#     # use the google/dart container (this makes `dart` available to use)
#     container:
#       image: google/dart:latest

#     # checkout the code, run pub get and finally run tests
#     steps:
#       - uses: actions/checkout@v2
#       - name: Install dependencies
#         run: pub get
#       - name: Run tests
#         run: pub run test
